@page "/"
@inject UsuariosBLL usuariosBLL
@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IToastService toastService

<PageTitle>Dashboard</PageTitle>

@if (sesionIniciada)
{
    <MyLotoRewards.Pages.Dashboard.Balance></MyLotoRewards.Pages.Dashboard.Balance>
}
<MyLotoRewards.Pages.Dashboard.Balance></MyLotoRewards.Pages.Dashboard.Balance>

<SurveyPrompt Title="How is Blazor working for you?" />

@code {
    public int TicketsJugados { get; set; }
    public int JugadasRealizadas { get; set; }
    public double TotalJugado { get; set; }
    public int GananciasRegistradas { get; set; }
    public double TotalGanado { get; set; }
    public bool sesionIniciada { get; set; } = false;

    public async Task validarSesion()
    {
        string? nombre = await sessionStorage.GetItemAsync<string>("Nombre");
        string? email = await sessionStorage.GetItemAsync<string>("Email");
        string? userIdApi = await sessionStorage.GetItemAsync<string>("UserIdApi");

        if (userIdApi != null && nombre != null && email != null)
        {
            Usuarios? user = usuariosBLL.BuscarPorUserIdApi(userIdApi);
            if (user == null)
            {
                user = new Usuarios();
                user.Nombre = nombre;
                user.Email = email;
                user.UserIdApi = userIdApi;

                if (usuariosBLL.Guardar(user))
                {
                    toastService.ShowSuccess("Usuario registrado!");
                    iniciarSesion();
                }
                else
                {
                    toastService.ShowError("No se pudo crear el usuario");
                }
            }
            else
            {
                iniciarSesion();
            }
        }
    }

    public async void iniciarSesion()
    {
        var NewSession = await sessionStorage.GetItemAsync<string>("NewSession");
        if (NewSession != null)
        {
            sesionIniciada = true;
            toastService.ShowSuccess("Sesión iniciada!");
            sessionStorage.RemoveItemAsync("NewSession");
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        validarSesion();
    }

    public void RedirectTo(string path)
    {
        JSRuntime.InvokeAsync<object>("clientJsfunctions.RedirectTo", path);
    }
}
